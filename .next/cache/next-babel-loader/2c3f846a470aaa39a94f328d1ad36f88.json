{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Input, TextArea, Button, Image, Message, Header, Icon } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport catchErrors from \"../utils/catchErrors\";\nvar INITIAL_PRODUCT = {\n  name: \"\",\n  price: \"\",\n  media: \"\",\n  description: \"\"\n};\n\nfunction CreateProduct() {\n  var _React$useState = React.useState(INITIAL_PRODUCT),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      product = _React$useState2[0],\n      setProduct = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mediaPreview = _React$useState4[0],\n      setMediaPreview = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      success = _React$useState6[0],\n      setSuccess = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      disabled = _React$useState10[0],\n      setDisabled = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      error = _React$useState12[0],\n      setError = _React$useState12[1];\n\n  React.useEffect(function () {\n    var isProduct = _Object$values(product).every(function (el) {\n      return Boolean(el);\n    });\n\n    isProduct ? setDisabled(false) : setDisabled(true);\n  }, [product]);\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value,\n        files = _event$target.files;\n\n    if (name === \"media\") {\n      setProduct(function (prevState) {\n        return _objectSpread({}, prevState, {\n          media: files[0]\n        });\n      });\n      setMediaPreview(window.URL.createObjectURL(files[0]));\n    } else {\n      setProduct(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, name, value));\n      });\n    }\n  }\n\n  function handleImageUpload() {\n    return _handleImageUpload.apply(this, arguments);\n  }\n\n  function _handleImageUpload() {\n    _handleImageUpload = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, response, mediaUrl;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = new FormData();\n              data.append(\"file\", product.media);\n              data.append(\"upload_preset\", \"reactreserve\");\n              data.append(\"cloud_name\", \"reedbargercodes\");\n              _context.next = 6;\n              return axios.post(process.env.CLOUDINARY_URL, data);\n\n            case 6:\n              response = _context.sent;\n              mediaUrl = response.data.url;\n              return _context.abrupt(\"return\", mediaUrl);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleImageUpload.apply(this, arguments);\n  }\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(event) {\n      var mediaUrl, url, name, price, description, payload;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              event.preventDefault();\n              setLoading(true);\n              setError(\"\");\n              _context2.next = 6;\n              return handleImageUpload();\n\n            case 6:\n              mediaUrl = _context2.sent;\n              url = \"\".concat(baseUrl, \"/api/product\");\n              name = product.name, price = product.price, description = product.description;\n              payload = {\n                name: name,\n                price: price,\n                description: description,\n                mediaUrl: mediaUrl\n              };\n              _context2.next = 12;\n              return axios.post(url, payload);\n\n            case 12:\n              setProduct(INITIAL_PRODUCT);\n              setSuccess(true);\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              catchErrors(_context2.t0, setError);\n\n            case 19:\n              _context2.prev = 19;\n              setLoading(false);\n              return _context2.finish(19);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 16, 19, 22]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    block: true\n  }, __jsx(Icon, {\n    name: \"add\",\n    color: \"orange\"\n  }), \"Create New Product\"), __jsx(Form, {\n    loading: loading,\n    error: Boolean(error),\n    success: success,\n    onSubmit: handleSubmit\n  }, __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: error\n  }), __jsx(Message, {\n    success: true,\n    icon: \"check\",\n    header: \"Success!\",\n    content: \"Your product has been posted\"\n  }), __jsx(Form.Group, {\n    widths: \"equal\"\n  }, __jsx(Form.Field, {\n    control: Input,\n    name: \"name\",\n    label: \"Name\",\n    placeholder: \"Name\",\n    value: product.name,\n    onChange: handleChange\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"price\",\n    label: \"Price\",\n    placeholder: \"Price\",\n    min: \"0.00\",\n    step: \"0.01\",\n    type: \"number\",\n    value: product.price,\n    onChange: handleChange\n  }), __jsx(Form.Field, {\n    control: Input,\n    name: \"media\",\n    type: \"file\",\n    label: \"Media\",\n    accept: \"image/*\",\n    content: \"Select Image\",\n    onChange: handleChange\n  })), __jsx(Image, {\n    src: mediaPreview,\n    rounded: true,\n    centered: true,\n    size: \"small\"\n  }), __jsx(Form.Field, {\n    control: TextArea,\n    name: \"description\",\n    label: \"Description\",\n    placeholder: \"Description\",\n    onChange: handleChange,\n    value: product.description\n  }), __jsx(Form.Field, {\n    control: Button,\n    disabled: disabled || loading,\n    color: \"blue\",\n    icon: \"pencil alternate\",\n    content: \"Submit\",\n    type: \"submit\"\n  })));\n}\n\nexport default CreateProduct;","map":null,"metadata":{},"sourceType":"module"}